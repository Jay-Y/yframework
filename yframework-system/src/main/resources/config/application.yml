# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://jhipster.github.io/profiles/
# More information on configuration properties: https://jhipster.github.io/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

#eureka:
#    instance:
#        appname: server
#        instanceId: server:${spring.application.instance_id:${random.value}}
#        statusPageUrlPath: ${management.context-path}/info
#        healthCheckUrlPath: ${management.context-path}/health
#        metadata-map:
#            profile: ${spring.profiles.active}
#            version: ${info.project.version}
#ribbon:
#    eureka:
#        enabled: true
#zuul:
#    host:
#        connect-timeout-millis: 5000
#        socket-timeout-millis: 10000
#
## See https://github.com/Netflix/Hystrix/wiki/Configuration
#hystrix:
#    command:
#        default:
#            execution:
#                isolation:
#                    thread:
#                        timeoutInMilliseconds: 10000

management:
    security:
        roles: ADMIN
    context-path: /management
    health:
        mail:
            enabled: true # When using the MailService, configure an SMTP server and set this to true
spring:
    application:
        name: system
    profiles:
        # The commented value for `active` can be replaced with valid Spring profiles to load.
        # Otherwise, it will be filled in by maven when building the WAR file
        # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
        active: dev
    jackson:
        serialization.write_dates_as_timestamps: false
    messages:
        basename: i18n/messages
    mvc:
        favicon:
            enabled: false
    thymeleaf:
        mode: XHTML
    cache:
      type: redis

liquibase:
    change-log: classpath:config/liquibase/master.xml

mybatis:
    configLocation: classpath:config/mybatis-config.xml
    mapperLocations: mapper/*.xml

security:
    basic:
        enabled: false

server:
    session:
        cookie:
            http-only: true

info:
    project:
        version: #project.version#

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://jhipster.github.io/common-application-properties/
# ===================================================================

application:
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
    # CORS is only enabled by default with the "dev" profile, so BrowserSync can access the API
    cors:
        allowed-origins: "*"
        allowed-methods: GET, PUT, POST, DELETE, OPTIONS
        allowed-headers: "*"
        exposed-headers: "X-Total-Count,Link,X-App-Alert,X-App-Params,X-App-Error"
        allow-credentials: true
        max-age: 1800
    security:
        authentication:
            jwt:
                secret: my-secret-token-to-change-in-production
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
                token-validity-in-seconds-for-remember-me: 2592000
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: ysj570440569@163.com
        base-url: http://127.0.0.1:8080
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        graphite: # Use the "graphite" Maven profile to have the Graphite dependencies
            enabled: false
            host: localhost
            port: 2003
            prefix: yframework
        prometheus: # Use the "prometheus" Maven profile to have the Prometheus dependencies
            enabled: false
            endpoint: /prometheusMetrics
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512
        spectator-metrics: # Reports Spectator Circuit Breaker metrics in the logs
            enabled: false
            # edit spring.metrics.export.delay-millis to set report frequency
    swagger:
        default-include-pattern: /api/.*
        title: RESTful APIs
        description: API documentation
        version: 0.0.1
        terms-of-service-url:
        contact-name: Jay-Y
        contact-url: https://jay-y.github.io
        contact-email: jay_y@foxmail.com
        license:
        license-url: